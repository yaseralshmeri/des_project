# Generated by Django 4.2.7 on 2025-10-16 20:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('event_type', models.CharField(choices=[('SEMESTER_START', 'Semester Start'), ('SEMESTER_END', 'Semester End'), ('REGISTRATION_START', 'Registration Starts'), ('REGISTRATION_END', 'Registration Ends'), ('EXAM_PERIOD_START', 'Exam Period Starts'), ('EXAM_PERIOD_END', 'Exam Period Ends'), ('HOLIDAY', 'Holiday'), ('BREAK', 'Academic Break'), ('GRADUATION', 'Graduation Ceremony'), ('OTHER', 'Other Event')], max_length=20)),
                ('date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('is_holiday', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'academic_calendar',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='AcademicProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('degree_type', models.CharField(choices=[('BACHELOR', "Bachelor's Degree"), ('MASTER', "Master's Degree"), ('DOCTORATE', 'Doctorate Degree'), ('CERTIFICATE', 'Certificate Program'), ('DIPLOMA', 'Diploma Program')], max_length=15)),
                ('required_credits', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('duration_semesters', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'academic_programs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'academic_years',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('LATE', 'Late'), ('EXCUSED', 'Excused Absence')], default='PRESENT', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'attendance',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ENROLLED', 'Enrolled'), ('DROPPED', 'Dropped'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='ENROLLED', max_length=10)),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'db_table': 'enrollments',
                'ordering': ['-enrollment_date'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_type', models.CharField(choices=[('ASSIGNMENT', 'Assignment'), ('QUIZ', 'Quiz'), ('MIDTERM', 'Midterm Exam'), ('FINAL', 'Final Exam'), ('PROJECT', 'Project'), ('PARTICIPATION', 'Class Participation')], max_length=15)),
                ('title', models.CharField(max_length=100)),
                ('points_earned', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('points_possible', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('date_assigned', models.DateField()),
                ('date_due', models.DateField(blank=True, null=True)),
                ('date_graded', models.DateTimeField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'grades',
                'ordering': ['-date_assigned'],
            },
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter_grade', models.CharField(max_length=2)),
                ('min_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('gpa_points', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('is_passing', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'grade_scales',
                'ordering': ['-min_percentage'],
            },
        ),
        migrations.CreateModel(
            name='Prerequisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_grade', models.DecimalField(decimal_places=2, default=60.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'db_table': 'prerequisites',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(blank=True, max_length=50)),
                ('building', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'db_table': 'schedules',
                'ordering': ['day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('FALL', 'Fall Semester'), ('SPRING', 'Spring Semester'), ('SUMMER', 'Summer Semester')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('registration_start', models.DateField()),
                ('registration_end', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='academic.academicyear')),
            ],
            options={
                'db_table': 'semesters',
                'ordering': ['-start_date'],
            },
        ),
    ]
