# University Management System - Docker Compose Configuration
# Complete development and production setup

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: university_db
    environment:
      POSTGRES_DB: university_db
      POSTGRES_USER: university_user
      POSTGRES_PASSWORD: university_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U university_user -d university_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Caching and Celery
  redis:
    image: redis:7-alpine
    container_name: university_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Web Application
  web:
    build: .
    container_name: university_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 university_system.wsgi:application"
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://university_user:university_pass@db:5432/university_db
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for Background Tasks
  celery:
    build: .
    container_name: university_celery
    command: celery -A university_system worker -l info
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://university_user:university_pass@db:5432/university_db
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Beat for Scheduled Tasks
  celery-beat:
    build: .
    container_name: university_celery_beat
    command: celery -A university_system beat -l info
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://university_user:university_pass@db:5432/university_db
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: university_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/var/www/staticfiles:ro
      - ./media:/var/www/media:ro
    depends_on:
      - web
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: university_network