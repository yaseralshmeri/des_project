# Generated by Django 4.2.16 on 2025-10-29 17:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="SecurityThreat",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "threat_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="معرف التهديد"
                    ),
                ),
                (
                    "threat_type",
                    models.CharField(
                        choices=[
                            ("MALWARE", "برمجيات خبيثة"),
                            ("PHISHING", "تصيد"),
                            ("SQL_INJECTION", "حقن SQL"),
                            ("XSS", "تنفيذ سكريبت متصفح"),
                            ("CSRF", "تزوير طلب عبر المواقع"),
                            ("BRUTE_FORCE", "قوة غاشمة"),
                            ("DOS", "حرمان من الخدمة"),
                            ("DDOS", "حرمان موزع من الخدمة"),
                            ("DATA_BREACH", "اختراق بيانات"),
                            ("UNAUTHORIZED_ACCESS", "وصول غير مصرح"),
                            ("INSIDER_THREAT", "تهديد داخلي"),
                            ("SOCIAL_ENGINEERING", "هندسة اجتماعية"),
                            ("RANSOMWARE", "فدية إلكترونية"),
                            ("APT", "تهديد مستمر متقدم"),
                            ("ZERO_DAY", "يوم صفر"),
                        ],
                        max_length=30,
                        verbose_name="نوع التهديد",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="عنوان التهديد"),
                ),
                ("description", models.TextField(verbose_name="وصف التهديد")),
                (
                    "severity_level",
                    models.CharField(
                        choices=[
                            ("LOW", "منخفض"),
                            ("MEDIUM", "متوسط"),
                            ("HIGH", "عالي"),
                            ("CRITICAL", "حرج"),
                            ("EMERGENCY", "طوارئ"),
                        ],
                        max_length=15,
                        verbose_name="مستوى الخطورة",
                    ),
                ),
                (
                    "risk_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="نقاط المخاطر",
                    ),
                ),
                (
                    "source_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="عنوان IP المصدر"
                    ),
                ),
                (
                    "source_country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="دولة المصدر"
                    ),
                ),
                (
                    "source_user_agent",
                    models.TextField(blank=True, verbose_name="متصفح المصدر"),
                ),
                (
                    "affected_resources",
                    models.JSONField(default=list, verbose_name="الموارد المتأثرة"),
                ),
                (
                    "attack_vector",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="متجه الهجوم"
                    ),
                ),
                (
                    "attack_signature",
                    models.TextField(blank=True, verbose_name="بصمة الهجوم"),
                ),
                ("payload", models.TextField(blank=True, verbose_name="الحمولة")),
                (
                    "request_details",
                    models.JSONField(default=dict, verbose_name="تفاصيل الطلب"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DETECTED", "مكتشف"),
                            ("ANALYZING", "تحت التحليل"),
                            ("CONFIRMED", "مؤكد"),
                            ("MITIGATING", "تحت المعالجة"),
                            ("RESOLVED", "مُحلول"),
                            ("FALSE_POSITIVE", "إنذار كاذب"),
                        ],
                        default="DETECTED",
                        max_length=15,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "automated_response",
                    models.JSONField(default=dict, verbose_name="الاستجابة التلقائية"),
                ),
                (
                    "manual_actions",
                    models.JSONField(default=list, verbose_name="الإجراءات اليدوية"),
                ),
                (
                    "first_detected",
                    models.DateTimeField(auto_now_add=True, verbose_name="أول اكتشاف"),
                ),
                (
                    "last_seen",
                    models.DateTimeField(auto_now=True, verbose_name="آخر ظهور"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الحل"
                    ),
                ),
                (
                    "analysis_notes",
                    models.TextField(blank=True, verbose_name="ملاحظات التحليل"),
                ),
                (
                    "indicators_of_compromise",
                    models.JSONField(default=list, verbose_name="مؤشرات الاختراق"),
                ),
                (
                    "threat_intelligence",
                    models.JSONField(default=dict, verbose_name="استخبارات التهديد"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "affected_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="security_threats",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم المتأثر",
                    ),
                ),
                (
                    "assigned_analyst",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_threats",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المحلل المكلف",
                    ),
                ),
            ],
            options={
                "verbose_name": "تهديد أمني",
                "verbose_name_plural": "التهديدات الأمنية",
                "ordering": ["-risk_score", "-first_detected"],
            },
        ),
        migrations.CreateModel(
            name="SecurityPolicy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name_ar",
                    models.CharField(max_length=200, verbose_name="اسم السياسة - عربي"),
                ),
                (
                    "name_en",
                    models.CharField(
                        max_length=200, verbose_name="اسم السياسة - إنجليزي"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="رمز السياسة"
                    ),
                ),
                ("description", models.TextField(verbose_name="وصف السياسة")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("AUTHENTICATION", "مصادقة"),
                            ("AUTHORIZATION", "تفويض"),
                            ("PASSWORD", "كلمة المرور"),
                            ("SESSION", "الجلسة"),
                            ("DATA_PROTECTION", "حماية البيانات"),
                            ("NETWORK_SECURITY", "أمان الشبكة"),
                            ("INCIDENT_RESPONSE", "الاستجابة للحوادث"),
                            ("COMPLIANCE", "الامتثال"),
                            ("THREAT_DETECTION", "اكتشاف التهديدات"),
                            ("ACCESS_CONTROL", "التحكم في الوصول"),
                        ],
                        max_length=25,
                        verbose_name="فئة السياسة",
                    ),
                ),
                (
                    "enforcement_level",
                    models.CharField(
                        choices=[
                            ("STRICT", "صارم"),
                            ("MODERATE", "متوسط"),
                            ("LENIENT", "متساهل"),
                            ("MONITOR_ONLY", "مراقبة فقط"),
                        ],
                        default="MODERATE",
                        max_length=15,
                        verbose_name="مستوى التطبيق",
                    ),
                ),
                (
                    "policy_rules",
                    models.JSONField(default=dict, verbose_name="قواعد السياسة"),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="المعاملات"),
                ),
                (
                    "exceptions",
                    models.JSONField(default=list, verbose_name="الاستثناءات"),
                ),
                (
                    "applies_to_ip_ranges",
                    models.JSONField(default=list, verbose_name="نطاقات IP المطبقة"),
                ),
                (
                    "applies_to_systems",
                    models.JSONField(default=list, verbose_name="الأنظمة المطبقة"),
                ),
                (
                    "effective_from",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="ساري من"
                    ),
                ),
                (
                    "effective_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="ساري حتى"
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الاعتماد"
                    ),
                ),
                (
                    "review_frequency",
                    models.CharField(
                        choices=[
                            ("MONTHLY", "شهري"),
                            ("QUARTERLY", "ربع سنوي"),
                            ("SEMI_ANNUAL", "نصف سنوي"),
                            ("ANNUAL", "سنوي"),
                        ],
                        default="QUARTERLY",
                        max_length=20,
                        verbose_name="تكرار المراجعة",
                    ),
                ),
                (
                    "last_reviewed",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="آخر مراجعة"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشطة")),
                (
                    "is_mandatory",
                    models.BooleanField(default=True, verbose_name="إلزامية"),
                ),
                (
                    "violations_count",
                    models.IntegerField(default=0, verbose_name="عدد الانتهاكات"),
                ),
                (
                    "last_violation",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="آخر انتهاك"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "applies_to_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="security_policies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="ينطبق على المستخدمين",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_security_policies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="مُعتمد من",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_cyber_security_policies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أُنشأت بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "سياسة أمان",
                "verbose_name_plural": "سياسات الأمان",
                "ordering": ["category", "name_ar"],
            },
        ),
        migrations.CreateModel(
            name="SecurityIncident",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "incident_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="معرف الحادث"
                    ),
                ),
                (
                    "incident_type",
                    models.CharField(
                        choices=[
                            ("SECURITY_BREACH", "اختراق أمني"),
                            ("DATA_LEAK", "تسريب بيانات"),
                            ("SYSTEM_COMPROMISE", "اختراق نظام"),
                            ("ACCOUNT_TAKEOVER", "استحواذ على حساب"),
                            ("FRAUD", "احتيال"),
                            ("POLICY_VIOLATION", "انتهاك سياسة"),
                            ("SUSPICIOUS_ACTIVITY", "نشاط مشبوه"),
                            ("MALWARE_INFECTION", "إصابة ببرمجية خبيثة"),
                            ("PHISHING_ATTACK", "هجوم تصيد"),
                            ("INSIDER_THREAT", "تهديد داخلي"),
                        ],
                        max_length=30,
                        verbose_name="نوع الحادث",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="عنوان الحادث"),
                ),
                ("description", models.TextField(verbose_name="وصف الحادث")),
                (
                    "impact_level",
                    models.CharField(
                        choices=[
                            ("LOW", "منخفض"),
                            ("MEDIUM", "متوسط"),
                            ("HIGH", "عالي"),
                            ("CRITICAL", "حرج"),
                        ],
                        max_length=15,
                        verbose_name="مستوى التأثير",
                    ),
                ),
                (
                    "affected_systems",
                    models.JSONField(default=list, verbose_name="الأنظمة المتأثرة"),
                ),
                (
                    "affected_data_types",
                    models.JSONField(
                        default=list, verbose_name="أنواع البيانات المتأثرة"
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=12,
                        verbose_name="التكلفة المُقدرة",
                    ),
                ),
                ("occurred_at", models.DateTimeField(verbose_name="وقت الحدوث")),
                (
                    "detected_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="وقت الاكتشاف"
                    ),
                ),
                (
                    "contained_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="وقت الاحتواء"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="وقت الحل"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "مفتوح"),
                            ("IN_PROGRESS", "قيد المعالجة"),
                            ("CONTAINED", "محتوى"),
                            ("RESOLVED", "مُحلول"),
                            ("CLOSED", "مُغلق"),
                        ],
                        default="OPEN",
                        max_length=15,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=3,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="الأولوية",
                    ),
                ),
                (
                    "root_cause",
                    models.TextField(blank=True, verbose_name="السبب الجذري"),
                ),
                (
                    "lessons_learned",
                    models.TextField(blank=True, verbose_name="الدروس المستفادة"),
                ),
                (
                    "preventive_measures",
                    models.JSONField(default=list, verbose_name="التدابير الوقائية"),
                ),
                (
                    "stakeholders_notified",
                    models.JSONField(default=list, verbose_name="الأطراف المُخطرة"),
                ),
                (
                    "external_notifications",
                    models.JSONField(default=list, verbose_name="الإخطارات الخارجية"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "affected_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="security_incidents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدمون المتأثرون",
                    ),
                ),
                (
                    "incident_commander",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="commanded_incidents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="قائد الحادث",
                    ),
                ),
                (
                    "related_threats",
                    models.ManyToManyField(
                        blank=True,
                        related_name="incidents",
                        to="cyber_security.securitythreat",
                        verbose_name="التهديدات المرتبطة",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reported_incidents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المُبلغ",
                    ),
                ),
                (
                    "response_team",
                    models.ManyToManyField(
                        blank=True,
                        related_name="response_incidents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="فريق الاستجابة",
                    ),
                ),
            ],
            options={
                "verbose_name": "حادث أمني",
                "verbose_name_plural": "الحوادث الأمنية",
                "ordering": ["-priority", "-occurred_at"],
            },
        ),
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("LOGIN_ATTEMPT", "محاولة تسجيل دخول"),
                            ("FAILED_LOGIN", "فشل تسجيل دخول"),
                            ("SUSPICIOUS_ACTIVITY", "نشاط مشبوه"),
                            ("DATA_ACCESS", "الوصول للبيانات"),
                            ("SECURITY_VIOLATION", "انتهاك أمني"),
                            ("MALWARE_DETECTED", "اكتشاف برمجيات خبيثة"),
                            ("INTRUSION_ATTEMPT", "محاولة اختراق"),
                            ("POLICY_VIOLATION", "انتهاك سياسة"),
                            ("SYSTEM_ANOMALY", "شذوذ في النظام"),
                        ],
                        max_length=20,
                        verbose_name="نوع الحدث",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="عنوان الحدث")),
                ("description", models.TextField(verbose_name="وصف الحدث")),
                (
                    "source_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="عنوان IP المصدر"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, verbose_name="متصفح المستخدم"),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "منخفض"),
                            ("MEDIUM", "متوسط"),
                            ("HIGH", "عالي"),
                            ("CRITICAL", "حرج"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                        verbose_name="درجة الخطورة",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "مفتوح"),
                            ("INVESTIGATING", "قيد التحقيق"),
                            ("RESOLVED", "محلول"),
                            ("CLOSED", "مغلق"),
                            ("FALSE_POSITIVE", "إنذار كاذب"),
                        ],
                        default="OPEN",
                        max_length=15,
                        verbose_name="حالة الحدث",
                    ),
                ),
                (
                    "additional_data",
                    models.JSONField(default=dict, verbose_name="بيانات إضافية"),
                ),
                (
                    "risk_score",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="درجة المخاطر",
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(blank=True, verbose_name="ملاحظات الحل"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الحل"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "affected_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="security_events_affected",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم المتأثر",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_security_events",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="مُعيّن إلى",
                    ),
                ),
                (
                    "detected_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="detected_security_events",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="اكتُشِف بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "حدث أمني",
                "verbose_name_plural": "الأحداث الأمنية",
                "ordering": ["-created_at", "-severity"],
            },
        ),
        migrations.CreateModel(
            name="SecurityDashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="اسم اللوحة")),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("EXECUTIVE", "تنفيذي"),
                            ("ANALYST", "محلل"),
                            ("INCIDENT_RESPONSE", "الاستجابة للحوادث"),
                            ("COMPLIANCE", "الامتثال"),
                            ("THREAT_HUNTING", "صيد التهديدات"),
                        ],
                        max_length=20,
                        verbose_name="نوع اللوحة",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="وصف اللوحة"),
                ),
                (
                    "layout_config",
                    models.JSONField(default=dict, verbose_name="إعدادات التخطيط"),
                ),
                ("widgets", models.JSONField(default=list, verbose_name="الأدوات")),
                ("filters", models.JSONField(default=dict, verbose_name="المرشحات")),
                (
                    "refresh_interval",
                    models.IntegerField(
                        default=300, verbose_name="فترة التحديث (ثانية)"
                    ),
                ),
                ("metrics", models.JSONField(default=dict, verbose_name="المقاييس")),
                (
                    "charts_data",
                    models.JSONField(
                        default=dict, verbose_name="بيانات الرسوم البيانية"
                    ),
                ),
                (
                    "alerts_data",
                    models.JSONField(default=list, verbose_name="بيانات التنبيهات"),
                ),
                (
                    "alert_thresholds",
                    models.JSONField(default=dict, verbose_name="عتبات التنبيه"),
                ),
                (
                    "notification_settings",
                    models.JSONField(default=dict, verbose_name="إعدادات الإشعارات"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشطة")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="افتراضية"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="آخر تحديث"),
                ),
                (
                    "data_sources",
                    models.JSONField(default=list, verbose_name="مصادر البيانات"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_dashboards",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المالك",
                    ),
                ),
                (
                    "viewers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="viewable_security_dashboards",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المشاهدون",
                    ),
                ),
            ],
            options={
                "verbose_name": "لوحة أمان",
                "verbose_name_plural": "لوحات الأمان",
                "ordering": ["dashboard_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="SecurityAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="معرف الحدث"
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("AUTHENTICATION", "مصادقة"),
                            ("AUTHORIZATION", "تفويض"),
                            ("DATA_ACCESS", "الوصول للبيانات"),
                            ("DATA_MODIFICATION", "تعديل البيانات"),
                            ("SYSTEM_ACCESS", "الوصول للنظام"),
                            ("CONFIGURATION_CHANGE", "تغيير إعدادات"),
                            ("PRIVILEGE_ESCALATION", "رفع صلاحيات"),
                            ("SECURITY_VIOLATION", "انتهاك أمني"),
                            ("POLICY_VIOLATION", "انتهاك سياسة"),
                            ("SUSPICIOUS_ACTIVITY", "نشاط مشبوه"),
                        ],
                        max_length=25,
                        verbose_name="نوع الحدث",
                    ),
                ),
                (
                    "event_description",
                    models.CharField(max_length=500, verbose_name="وصف الحدث"),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("INFO", "معلوماتي"),
                            ("LOW", "منخفض"),
                            ("MEDIUM", "متوسط"),
                            ("HIGH", "عالي"),
                            ("CRITICAL", "حرج"),
                        ],
                        default="INFO",
                        max_length=10,
                        verbose_name="الخطورة",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="معرف الجلسة"
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="عنوان IP")),
                (
                    "user_agent",
                    models.TextField(blank=True, verbose_name="متصفح المستخدم"),
                ),
                (
                    "request_method",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="طريقة الطلب"
                    ),
                ),
                (
                    "request_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="مسار الطلب"
                    ),
                ),
                (
                    "request_data",
                    models.JSONField(default=dict, verbose_name="بيانات الطلب"),
                ),
                ("was_successful", models.BooleanField(verbose_name="نجح الحدث")),
                (
                    "response_code",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="رمز الاستجابة"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="رسالة الخطأ"),
                ),
                (
                    "affected_objects",
                    models.JSONField(default=list, verbose_name="الكائنات المتأثرة"),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "additional_data",
                    models.JSONField(default=dict, verbose_name="بيانات إضافية"),
                ),
                (
                    "risk_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="نقاط المخاطر",
                    ),
                ),
                (
                    "automated_analysis",
                    models.JSONField(default=dict, verbose_name="التحليل التلقائي"),
                ),
                (
                    "threat_indicators",
                    models.JSONField(default=list, verbose_name="مؤشرات التهديد"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="الوقت"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="security_audit_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل تدقيق أمني",
                "verbose_name_plural": "سجلات التدقيق الأمني",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="BehaviorAnalysis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "behavior_type",
                    models.CharField(
                        choices=[
                            ("LOGIN_PATTERN", "نمط تسجيل الدخول"),
                            ("ACCESS_PATTERN", "نمط الوصول"),
                            ("DATA_ACCESS", "الوصول للبيانات"),
                            ("SYSTEM_USAGE", "استخدام النظام"),
                            ("NETWORK_ACTIVITY", "نشاط الشبكة"),
                            ("FILE_OPERATIONS", "عمليات الملفات"),
                            ("PRIVILEGE_USAGE", "استخدام الصلاحيات"),
                            ("TIME_BASED", "مبني على الوقت"),
                        ],
                        max_length=20,
                        verbose_name="نوع السلوك",
                    ),
                ),
                (
                    "baseline_behavior",
                    models.JSONField(default=dict, verbose_name="السلوك الأساسي"),
                ),
                (
                    "current_behavior",
                    models.JSONField(default=dict, verbose_name="السلوك الحالي"),
                ),
                (
                    "behavioral_metrics",
                    models.JSONField(default=dict, verbose_name="مقاييس السلوك"),
                ),
                (
                    "anomaly_score",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                        verbose_name="نقاط الشذوذ",
                    ),
                ),
                (
                    "anomaly_level",
                    models.CharField(
                        choices=[
                            ("NORMAL", "طبيعي"),
                            ("SUSPICIOUS", "مشبوه"),
                            ("ANOMALOUS", "شاذ"),
                            ("CRITICAL", "حرج"),
                        ],
                        default="NORMAL",
                        max_length=15,
                        verbose_name="مستوى الشذوذ",
                    ),
                ),
                (
                    "anomaly_details",
                    models.JSONField(default=list, verbose_name="تفاصيل الشذوذ"),
                ),
                (
                    "analysis_period_start",
                    models.DateTimeField(verbose_name="بداية فترة التحليل"),
                ),
                (
                    "analysis_period_end",
                    models.DateTimeField(verbose_name="نهاية فترة التحليل"),
                ),
                (
                    "risk_indicators",
                    models.JSONField(default=list, verbose_name="مؤشرات المخاطر"),
                ),
                (
                    "recommended_actions",
                    models.JSONField(default=list, verbose_name="الإجراءات المُوصى بها"),
                ),
                (
                    "confidence_level",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                        verbose_name="مستوى الثقة",
                    ),
                ),
                ("is_flagged", models.BooleanField(default=False, verbose_name="مُعلم")),
                (
                    "follow_up_required",
                    models.BooleanField(default=False, verbose_name="يتطلب متابعة"),
                ),
                (
                    "analyst_notes",
                    models.TextField(blank=True, verbose_name="ملاحظات المحلل"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="behavior_analyses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم",
                    ),
                ),
            ],
            options={
                "verbose_name": "تحليل سلوك",
                "verbose_name_plural": "تحليلات السلوك",
                "ordering": ["-anomaly_score", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ThreatIntelligence",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "intel_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="معرف الاستخبارات"
                    ),
                ),
                (
                    "intel_type",
                    models.CharField(
                        choices=[
                            ("IOC", "مؤشر اختراق"),
                            ("TTPs", "تكتيكات وتقنيات وإجراءات"),
                            ("CAMPAIGN", "حملة"),
                            ("ACTOR", "فاعل تهديد"),
                            ("MALWARE", "برمجية خبيثة"),
                            ("VULNERABILITY", "ثغرة أمنية"),
                            ("ATTACK_PATTERN", "نمط هجوم"),
                            ("TOOL", "أداة"),
                        ],
                        max_length=20,
                        verbose_name="نوع الاستخبارات",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="العنوان")),
                ("description", models.TextField(verbose_name="الوصف")),
                ("source", models.CharField(max_length=200, verbose_name="المصدر")),
                (
                    "source_reliability",
                    models.CharField(
                        choices=[
                            ("LOW", "منخفض"),
                            ("MEDIUM", "متوسط"),
                            ("HIGH", "عالي"),
                            ("CONFIRMED", "مؤكد"),
                        ],
                        default="MEDIUM",
                        max_length=15,
                        verbose_name="موثوقية المصدر",
                    ),
                ),
                (
                    "collection_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="تاريخ الجمع"
                    ),
                ),
                ("indicators", models.JSONField(default=list, verbose_name="المؤشرات")),
                ("attributes", models.JSONField(default=dict, verbose_name="الخصائص")),
                (
                    "relationships",
                    models.JSONField(default=list, verbose_name="العلاقات"),
                ),
                (
                    "confidence_level",
                    models.CharField(
                        choices=[
                            ("LOW", "منخفض"),
                            ("MEDIUM", "متوسط"),
                            ("HIGH", "عالي"),
                            ("CONFIRMED", "مؤكد"),
                        ],
                        default="MEDIUM",
                        max_length=15,
                        verbose_name="مستوى الثقة",
                    ),
                ),
                (
                    "relevance_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="نقاط الصلة",
                    ),
                ),
                (
                    "threat_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="نقاط التهديد",
                    ),
                ),
                (
                    "tlp_level",
                    models.CharField(
                        choices=[
                            ("WHITE", "أبيض - عام"),
                            ("GREEN", "أخضر - مجتمع"),
                            ("AMBER", "عنبري - محدود"),
                            ("RED", "أحمر - مقيد"),
                        ],
                        default="GREEN",
                        max_length=10,
                        verbose_name="مستوى TLP",
                    ),
                ),
                (
                    "classification",
                    models.CharField(blank=True, max_length=50, verbose_name="التصنيف"),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="صالح من"
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="صالح حتى"
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="آخر تحديث"),
                ),
                (
                    "applied_to_systems",
                    models.JSONField(default=list, verbose_name="مطبق على الأنظمة"),
                ),
                (
                    "detection_rules",
                    models.JSONField(default=list, verbose_name="قواعد الكشف"),
                ),
                (
                    "mitigation_strategies",
                    models.JSONField(default=list, verbose_name="استراتيجيات التخفيف"),
                ),
                (
                    "hits_count",
                    models.IntegerField(default=0, verbose_name="عدد الإصابات"),
                ),
                (
                    "last_hit",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="آخر إصابة"
                    ),
                ),
                (
                    "false_positives",
                    models.IntegerField(default=0, verbose_name="الإيجابيات الكاذبة"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_threat_intel",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أُنشأت بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "استخبارات تهديد",
                "verbose_name_plural": "استخبارات التهديدات",
                "ordering": ["-threat_score", "-collection_date"],
                "indexes": [
                    models.Index(
                        fields=["intel_type", "confidence_level"],
                        name="cyber_secur_intel_t_c55708_idx",
                    ),
                    models.Index(
                        fields=["source"], name="cyber_secur_source_d0f5be_idx"
                    ),
                    models.Index(
                        fields=["threat_score"], name="cyber_secur_threat__173ef8_idx"
                    ),
                    models.Index(
                        fields=["valid_from", "valid_until"],
                        name="cyber_secur_valid_f_4d02e7_idx",
                    ),
                    models.Index(
                        fields=["tlp_level"], name="cyber_secur_tlp_lev_1b489c_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="securitythreat",
            index=models.Index(
                fields=["threat_type", "severity_level"],
                name="cyber_secur_threat__98c48b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="securitythreat",
            index=models.Index(
                fields=["source_ip"], name="cyber_secur_source__8d7f12_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitythreat",
            index=models.Index(fields=["status"], name="cyber_secur_status_540fcb_idx"),
        ),
        migrations.AddIndex(
            model_name="securitythreat",
            index=models.Index(
                fields=["first_detected"], name="cyber_secur_first_d_f12d1e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitythreat",
            index=models.Index(
                fields=["affected_user"], name="cyber_secur_affecte_d4cfb6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitypolicy",
            index=models.Index(
                fields=["category", "is_active"], name="cyber_secur_categor_8a896e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitypolicy",
            index=models.Index(fields=["code"], name="cyber_secur_code_75d1d0_idx"),
        ),
        migrations.AddIndex(
            model_name="securitypolicy",
            index=models.Index(
                fields=["enforcement_level"], name="cyber_secur_enforce_6e7081_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitypolicy",
            index=models.Index(
                fields=["effective_from", "effective_until"],
                name="cyber_secur_effecti_e9e07b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="securityincident",
            index=models.Index(
                fields=["incident_type", "status"],
                name="cyber_secur_inciden_4db7c3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="securityincident",
            index=models.Index(
                fields=["impact_level"], name="cyber_secur_impact__14ac3e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityincident",
            index=models.Index(
                fields=["occurred_at"], name="cyber_secur_occurre_2641b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityincident",
            index=models.Index(
                fields=["reporter"], name="cyber_secur_reporte_7cf698_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityevent",
            index=models.Index(
                fields=["event_type", "severity"], name="cyber_secur_event_t_c8825f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityevent",
            index=models.Index(
                fields=["status", "created_at"], name="cyber_secur_status_ff5f64_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityevent",
            index=models.Index(
                fields=["source_ip"], name="cyber_secur_source__ef6543_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityevent",
            index=models.Index(
                fields=["affected_user"], name="cyber_secur_affecte_2df7b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitydashboard",
            index=models.Index(
                fields=["owner", "is_active"], name="cyber_secur_owner_i_c659c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securitydashboard",
            index=models.Index(
                fields=["dashboard_type"], name="cyber_secur_dashboa_faa987_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityauditlog",
            index=models.Index(
                fields=["event_type", "severity"], name="cyber_secur_event_t_51089c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityauditlog",
            index=models.Index(
                fields=["user", "-timestamp"], name="cyber_secur_user_id_e9ab90_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityauditlog",
            index=models.Index(
                fields=["ip_address"], name="cyber_secur_ip_addr_375daa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityauditlog",
            index=models.Index(
                fields=["was_successful"], name="cyber_secur_was_suc_15df92_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityauditlog",
            index=models.Index(
                fields=["risk_score"], name="cyber_secur_risk_sc_389229_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="securityauditlog",
            index=models.Index(
                fields=["timestamp"], name="cyber_secur_timesta_bf341e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="behavioranalysis",
            index=models.Index(
                fields=["user", "behavior_type"], name="cyber_secur_user_id_90040d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="behavioranalysis",
            index=models.Index(
                fields=["anomaly_level"], name="cyber_secur_anomaly_526288_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="behavioranalysis",
            index=models.Index(
                fields=["is_flagged"], name="cyber_secur_is_flag_824eb4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="behavioranalysis",
            index=models.Index(
                fields=["analysis_period_start", "analysis_period_end"],
                name="cyber_secur_analysi_e60790_idx",
            ),
        ),
    ]
