# Generated by Django 4.2.16 on 2025-10-29 19:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("courses", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("smart_ai", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="teacheraiprofile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="teacher_ai_profile",
                to=settings.AUTH_USER_MODEL,
                verbose_name="الأستاذ",
            ),
        ),
        migrations.AddField(
            model_name="studentperformanceprediction",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="smart_ai_performance_predictions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="الطالب",
            ),
        ),
        migrations.AddField(
            model_name="studentaiprofile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ai_profile",
                to=settings.AUTH_USER_MODEL,
                verbose_name="الطالب",
            ),
        ),
        migrations.AddField(
            model_name="smartassistant",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_assistants",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أُنشأ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="smartassistant",
            name="nlp_model",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="nlp_assistants",
                to="smart_ai.aimodel",
                verbose_name="نموذج معالجة اللغة",
            ),
        ),
        migrations.AddField(
            model_name="predictiveanalytics",
            name="ai_model",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="predictions",
                to="smart_ai.aimodel",
                verbose_name="النموذج المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="predictiveanalytics",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_predictions",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أُنشأ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="predictiveanalytics",
            name="target_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="predictive_analytics",
                to=settings.AUTH_USER_MODEL,
                verbose_name="المستخدم المستهدف",
            ),
        ),
        migrations.AddField(
            model_name="learninganalytics",
            name="course",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="learning_analytics",
                to="courses.course",
                verbose_name="المقرر",
            ),
        ),
        migrations.AddField(
            model_name="learninganalytics",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="learning_analytics",
                to=settings.AUTH_USER_MODEL,
                verbose_name="المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="conversationlog",
            name="assistant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conversation_logs",
                to="smart_ai.smartassistant",
                verbose_name="المساعد",
            ),
        ),
        migrations.AddField(
            model_name="conversationlog",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conversation_logs",
                to=settings.AUTH_USER_MODEL,
                verbose_name="المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="chatbot",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="smart_ai.aichatbot",
                verbose_name="روبوت الدردشة",
            ),
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat_messages",
                to=settings.AUTH_USER_MODEL,
                verbose_name="المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="airecommendation",
            name="ai_model",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="recommendations",
                to="smart_ai.aimodel",
                verbose_name="النموذج المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="airecommendation",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ai_recommendations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="aimodel",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_ai_models",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أُنشأ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="aichatbot",
            name="developers",
            field=models.ManyToManyField(
                blank=True,
                related_name="developed_chatbots",
                to=settings.AUTH_USER_MODEL,
                verbose_name="المطورون",
            ),
        ),
        migrations.AddField(
            model_name="aichatbot",
            name="maintainers",
            field=models.ManyToManyField(
                blank=True,
                related_name="maintained_chatbots",
                to=settings.AUTH_USER_MODEL,
                verbose_name="فريق الصيانة",
            ),
        ),
        migrations.AddField(
            model_name="aianalyticsmodel",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_ai_analytics_models",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أُنشئ بواسطة",
            ),
        ),
        migrations.AddIndex(
            model_name="teacheraiprofile",
            index=models.Index(
                fields=["teaching_effectiveness"], name="smart_ai_te_teachin_83110c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teacheraiprofile",
            index=models.Index(
                fields=["student_satisfaction_avg"],
                name="smart_ai_te_student_50b18e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teacheraiprofile",
            index=models.Index(
                fields=["last_evaluation_date"], name="smart_ai_te_last_ev_db8e24_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentaiprofile",
            index=models.Index(
                fields=["dropout_risk"], name="smart_ai_st_dropout_c6d948_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentaiprofile",
            index=models.Index(
                fields=["learning_style"], name="smart_ai_st_learnin_bd47a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentaiprofile",
            index=models.Index(
                fields=["last_analysis_date"], name="smart_ai_st_last_an_675438_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="smartassistant",
            index=models.Index(
                fields=["assistant_type", "is_active"],
                name="smart_ai_sm_assista_218fe6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="smartassistant",
            index=models.Index(
                fields=["capability_level"], name="smart_ai_sm_capabil_ca03bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="predictiveanalytics",
            index=models.Index(
                fields=["prediction_type", "prediction_date"],
                name="smart_ai_pr_predict_9acb51_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="predictiveanalytics",
            index=models.Index(
                fields=["target_user"], name="smart_ai_pr_target__2c6d06_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="predictiveanalytics",
            index=models.Index(
                fields=["ai_model"], name="smart_ai_pr_ai_mode_c3c58e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="predictiveanalytics",
            index=models.Index(
                fields=["is_active"], name="smart_ai_pr_is_acti_64b743_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="learninganalytics",
            index=models.Index(
                fields=["user", "analytics_type"], name="smart_ai_le_user_id_a91223_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="learninganalytics",
            index=models.Index(
                fields=["course", "analytics_type"],
                name="smart_ai_le_course__cce99b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="learninganalytics",
            index=models.Index(
                fields=["analysis_period_start", "analysis_period_end"],
                name="smart_ai_le_analysi_e53f5c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversationlog",
            index=models.Index(
                fields=["conversation_id", "timestamp"],
                name="smart_ai_co_convers_2c97f0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversationlog",
            index=models.Index(
                fields=["user", "timestamp"], name="smart_ai_co_user_id_77cd02_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationlog",
            index=models.Index(
                fields=["assistant", "timestamp"], name="smart_ai_co_assista_b952cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationlog",
            index=models.Index(
                fields=["sentiment"], name="smart_ai_co_sentime_1cd1af_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="airecommendation",
            index=models.Index(
                fields=["user", "status"], name="smart_ai_ai_user_id_415c38_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="airecommendation",
            index=models.Index(
                fields=["recommendation_type", "priority"],
                name="smart_ai_ai_recomme_2be1ce_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="airecommendation",
            index=models.Index(
                fields=["valid_until"], name="smart_ai_ai_valid_u_f47f6e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aimodel",
            index=models.Index(
                fields=["model_type", "status"], name="smart_ai_ai_model_t_a5c1dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aimodel",
            index=models.Index(fields=["code"], name="smart_ai_ai_code_fba1c4_idx"),
        ),
        migrations.AddIndex(
            model_name="aimodel",
            index=models.Index(
                fields=["is_active"], name="smart_ai_ai_is_acti_1a1d3b_idx"
            ),
        ),
    ]
