# Generated by Django 4.2.16 on 2025-10-22 18:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("courses", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "enrollment_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ التسجيل"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ENROLLED", "مسجل"),
                            ("WAITLISTED", "قائمة انتظار"),
                            ("DROPPED", "منسحب"),
                            ("COMPLETED", "مكتمل"),
                            ("FAILED", "راسب"),
                            ("WITHDRAWN", "منسحب نهائياً"),
                        ],
                        default="ENROLLED",
                        max_length=15,
                        verbose_name="حالة التسجيل",
                    ),
                ),
                (
                    "midterm_grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="درجة منتصف الفصل",
                    ),
                ),
                (
                    "final_grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="الدرجة النهائية",
                    ),
                ),
                (
                    "total_grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="الدرجة الإجمالية",
                    ),
                ),
                (
                    "letter_grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A", "A"),
                            ("B+", "B+"),
                            ("B", "B"),
                            ("C+", "C+"),
                            ("C", "C"),
                            ("D+", "D+"),
                            ("D", "D"),
                            ("F", "F"),
                            ("I", "غير مكتمل"),
                            ("W", "منسحب"),
                            ("P", "ناجح"),
                            ("NP", "راسب"),
                        ],
                        max_length=2,
                        verbose_name="الدرجة الحرفية",
                    ),
                ),
                (
                    "grade_points",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(4),
                        ],
                        verbose_name="نقاط الدرجة",
                    ),
                ),
                (
                    "total_absences",
                    models.IntegerField(default=0, verbose_name="إجمالي الغياب"),
                ),
                (
                    "excused_absences",
                    models.IntegerField(default=0, verbose_name="الغياب المعذور"),
                ),
                (
                    "attendance_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=100.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="نسبة الحضور",
                    ),
                ),
                (
                    "drop_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الحذف"
                    ),
                ),
                (
                    "completion_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الإكمال"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="ملاحظات")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "course_offering",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.courseoffering",
                        verbose_name="عرض المقرر",
                    ),
                ),
                (
                    "enrolled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_enrollments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="مُسجل بواسطة",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"role": "STUDENT"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="الطالب",
                    ),
                ),
            ],
            options={
                "verbose_name": "تسجيل مقرر",
                "verbose_name_plural": "تسجيلات المقررات",
                "ordering": ["-enrollment_date"],
                "indexes": [
                    models.Index(
                        fields=["student", "status"],
                        name="courses_enr_student_c86bf5_idx",
                    ),
                    models.Index(
                        fields=["course_offering", "status"],
                        name="courses_enr_course__e9584c_idx",
                    ),
                    models.Index(
                        fields=["enrollment_date"],
                        name="courses_enr_enrollm_eb8905_idx",
                    ),
                ],
                "unique_together": {("student", "course_offering")},
            },
        ),
    ]
